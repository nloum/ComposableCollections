<?xml version="1.0" encoding="utf-8" ?>
<FluentApiSourceGenerator>
  <CodeGenerators>
    <CombinationInterfaces Namespace="ComposableCollections.Dictionary.Interfaces"
                           IncludeSubInterfaces="True"
                           Folder="Dictionary/Interfaces">
      <PreExistingInterfaces>
        <PreExistingInterface>IComposableDictionary</PreExistingInterface>
        <PreExistingInterface>IComposableReadOnlyDictionary</PreExistingInterface>
        <PreExistingInterface>IDisposableReadOnlyDictionary</PreExistingInterface>
        <PreExistingInterface>IQueryableReadOnlyDictionary</PreExistingInterface>
        <PreExistingInterface>IReadCachedDictionary</PreExistingInterface>
        <PreExistingInterface>IReadCachedReadOnlyDictionary</PreExistingInterface>
        <PreExistingInterface>IReadWriteCachedDictionary</PreExistingInterface>
        <PreExistingInterface>IWriteCachedDictionary</PreExistingInterface>
      </PreExistingInterfaces>
      <InterfaceNameBlacklist>
        <Regex>ReadOnly.*Write</Regex>
        <Regex>Write.*ReadOnly</Regex>
        <Regex>Cached.*Cached</Regex>
      </InterfaceNameBlacklist>
      <InterfaceNameBuilders>
        <InterfaceNameBuilder SearchRegex="^ReadOnly$" ReplaceRegex="IComposableReadOnlyDictionary" />
        <InterfaceNameBuilder SearchRegex="^$" ReplaceRegex="IComposableDictionary" />
        <InterfaceNameBuilder SearchRegex="(.+)" ReplaceRegex="I$1Dictionary" />
      </InterfaceNameBuilders>
      <InterfaceNameModifiers>
        <InterfaceNameModifier>
          <OneOf>
            <Part></Part>
            <Part>ReadCached</Part>
          </OneOf>
        </InterfaceNameModifier>
        <InterfaceNameModifier>
          <OneOf>
            <Part></Part>
            <Part>WriteCached</Part>
          </OneOf>
        </InterfaceNameModifier>
        <InterfaceNameModifier>
          <OneOf>
            <Part></Part>
            <Part>ReadWriteCached</Part>
          </OneOf>
        </InterfaceNameModifier>
        <InterfaceNameModifier>
          <OneOf>
            <Part></Part>
            <Part>Disposable</Part>
          </OneOf>
        </InterfaceNameModifier>
        <InterfaceNameModifier>
          <OneOf>
            <Part></Part>
            <Part>Queryable</Part>
          </OneOf>
        </InterfaceNameModifier>
        <InterfaceNameModifier>
          <OneOf>
            <Part>ReadOnly</Part>
            <Part></Part>
          </OneOf>
        </InterfaceNameModifier>
      </InterfaceNameModifiers>
    </CombinationInterfaces>
    <AnonymousImplementations Namespace="ComposableCollections.Dictionary.Anonymous" Folder="Dictionary/Anonymous">
      <AllowedArguments>
        <AllowedArgument>IComposableReadOnlyDictionary</AllowedArgument>
        <AllowedArgument>IComposableDictionary</AllowedArgument>
      </AllowedArguments>
      <InterfacesToImplement>
        <Interface>IDisposableDictionary</Interface>
        <Interface>IDisposableQueryableDictionary</Interface>
        <Interface>IDisposableQueryableReadOnlyDictionary</Interface>
        <Interface>IDisposableReadOnlyDictionary</Interface>
        <Interface>IQueryableDictionary</Interface>
        <Interface>IQueryableReadOnlyDictionary</Interface>
        <Interface>IReadCachedDisposableDictionary</Interface>
        <Interface>IReadCachedDisposableQueryableDictionary</Interface>
        <Interface>IReadCachedDisposableQueryableReadOnlyDictionary</Interface>
        <Interface>IReadCachedDisposableReadOnlyDictionary</Interface>
        <Interface>IReadCachedQueryableDictionary</Interface>
        <Interface>IReadCachedQueryableReadOnlyDictionary</Interface>
        <Interface>IReadWriteCachedDisposableDictionary</Interface>
        <Interface>IReadWriteCachedDisposableQueryableDictionary</Interface>
        <Interface>IReadWriteCachedQueryableDictionary</Interface>
        <Interface>IWriteCachedDisposableDictionary</Interface>
        <Interface>IWriteCachedDisposableQueryableDictionary</Interface>
        <Interface>IWriteCachedQueryableDictionary</Interface>
      </InterfacesToImplement>
    </AnonymousImplementations>
    <!--<DecoratorBaseClasses Namespace="ComposableCollections.Dictionary.Decorators" Folder="Dictionary/Decorators">
      <InterfacesToImplement>
        <Interface>IDisposableQueryableDictionary</Interface>
        <Interface>IDisposableQueryableReadOnlyDictionary</Interface>
        <Interface>IReadCachedDisposableDictionary</Interface>
        <Interface>IReadCachedDisposableQueryableDictionary</Interface>
        <Interface>IReadCachedDisposableQueryableReadOnlyDictionary</Interface>
        <Interface>IReadCachedDisposableReadOnlyDictionary</Interface>
        <Interface>IReadCachedQueryableDictionary</Interface>
        <Interface>IReadCachedQueryableReadOnlyDictionary</Interface>
        <Interface>IReadWriteCachedDisposableDictionary</Interface>
        <Interface>IReadWriteCachedDisposableQueryableDictionary</Interface>
        <Interface>IReadWriteCachedQueryableDictionary</Interface>
        <Interface>IWriteCachedDisposableDictionary</Interface>
        <Interface>IWriteCachedDisposableQueryableDictionary</Interface>
        <Interface>IWriteCachedQueryableDictionary</Interface>
      </InterfacesToImplement>
    </DecoratorBaseClasses>
    
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Adapters" BaseClass="ConcurrentWriteCachedDictionaryAdapter"
                                        Folder="Dictionary/Adapters">
      <ClassNameModifiers>
        <ClassNameModifier Search="WriteCached" Replacement="ConcurrentWriteCached" />
        <ClassNameModifier Search="Dictionary" Replacement="DictionaryAdapter" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <ConstructorExtensionMethods Namespace="ComposableCollections" ExtensionMethodName="WithWriteCaching">
      <BaseClasses>
        <BaseClass>ConcurrentWriteCachedDictionaryAdapter</BaseClass>
      </BaseClasses>
    </ConstructorExtensionMethods>
    
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Decorators" BaseClass="DictionaryGetOrDefaultDecorator"
                                        Folder="Dictionary/Decorators">
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="GetOrDefaultDictionaryDecorator" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <ConstructorExtensionMethods Namespace="ComposableCollections" ExtensionMethodName="WithDefaultPart">
      <BaseClasses>
        <BaseClass>DictionaryGetOrDefaultDecorator</BaseClass>
      </BaseClasses>
    </ConstructorExtensionMethods>

    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Decorators" BaseClass="DictionaryGetOrRefreshDecorator"
                                        Folder="Dictionary/Decorators">
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="GetOrRefreshDictionaryDecorator" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <ConstructorExtensionMethods Namespace="ComposableCollections" ExtensionMethodName="WithRefreshing">
      <BaseClasses>
        <BaseClass>DictionaryGetOrRefreshDecorator</BaseClass>
      </BaseClasses>
    </ConstructorExtensionMethods>

    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Decorators" BaseClass="ReadWriteLockDictionaryDecorator"
                                        Folder="Dictionary/Decorators">
      <ClassNameBlacklist>
        <Regex>Queryable</Regex>
      </ClassNameBlacklist>
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="ReadWriteLockDictionaryDecorator" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Decorators" BaseClass="ReadWriteLockQueryableDictionaryDecorator"
                                        Folder="Dictionary/Decorators">
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="ReadWriteLockDictionaryDecorator" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <ConstructorExtensionMethods Namespace="ComposableCollections" ExtensionMethodName="WithReadWriteLock">
      <BaseClasses>
        <BaseClass>ReadWriteLockDictionaryDecorator</BaseClass>
      </BaseClasses>
    </ConstructorExtensionMethods>
    
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Adapters" BaseClass="MappingKeysAndOneOfDictionaryAdapter"
                                        AllowDifferentTypeParameters="true" Folder="Dictionary/Adapters">
      <ClassNameBlacklist>
        <CLassName>WithBuiltInKey</CLassName>
        <CLassName>Queryable</CLassName>
        <CLassName>ReadCached</CLassName>
        <CLassName>ReadWriteCached</CLassName>
      </ClassNameBlacklist>
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="MappingKeysAndOneOfDictionaryAdapter" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Adapters" BaseClass="MappingKeysAndOneOfReadOnlyDictionaryAdapter"
                                        AllowDifferentTypeParameters="true" Folder="Dictionary/Adapters">
      <ClassNameBlacklist>
        <CLassName>WithBuiltInKey</CLassName>
        <CLassName>Queryable</CLassName>
        <CLassName>ReadCached</CLassName>
        <CLassName>ReadWriteCached</CLassName>
      </ClassNameBlacklist>
      <ClassNameWhitelist>
        <ClassName>ReadOnly</ClassName>
      </ClassNameWhitelist>
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="MappingKeysAndOneOfDictionaryAdapter" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Adapters" BaseClass="MappingOneOfDictionaryAdapter"
                                        AllowDifferentTypeParameters="true" Folder="Dictionary/Adapters">
      <ClassNameBlacklist>
        <CLassName>WithBuiltInKey</CLassName>
        <CLassName>Queryable</CLassName>
        <CLassName>ReadCached</CLassName>
        <CLassName>ReadWriteCached</CLassName>
      </ClassNameBlacklist>
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="MappingOneOfDictionaryAdapter" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <SubclassCombinationImplementations Namespace="ComposableCollections.Dictionary.Adapters" BaseClass="MappingOneOfReadOnlyDictionaryAdapter"
                                        AllowDifferentTypeParameters="true" Folder="Dictionary/Adapters">
      <ClassNameBlacklist>
        <CLassName>WithBuiltInKey</CLassName>
        <CLassName>Queryable</CLassName>
        <CLassName>ReadCached</CLassName>
        <CLassName>ReadWriteCached</CLassName>
      </ClassNameBlacklist>
      <ClassNameWhitelist>
        <ClassName>ReadOnly</ClassName>
      </ClassNameWhitelist>
      <ClassNameModifiers>
        <ClassNameModifier Search="Dictionary" Replacement="MappingOneOfDictionaryAdapter" />
      </ClassNameModifiers>
    </SubclassCombinationImplementations>
    <ConstructorExtensionMethods Namespace="ComposableCollections" ExtensionMethodName="WithMapping">
      <BaseClasses>
        <BaseClass>MappingKeysAndOneOfDictionaryAdapter</BaseClass>
        <BaseClass>MappingKeysAndOneOfReadOnlyDictionaryAdapter</BaseClass>
        <BaseClass>MappingOneOfDictionaryAdapter</BaseClass>
        <BaseClass>MappingOneOfReadOnlyDictionaryAdapter</BaseClass>
      </BaseClasses>
    </ConstructorExtensionMethods>-->
  </CodeGenerators>
</FluentApiSourceGenerator>